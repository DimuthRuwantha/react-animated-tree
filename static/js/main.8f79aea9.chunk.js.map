{"version":3,"sources":["../../src/icons.js","../../src/components/DirTree.js","../../src/index.js","App.js","serviceWorker.js","index.js"],"names":["EyeO","props","d","DownArrow","fill","RightArrow","FolderOpen","Folder","File","styles","position","padding","textOverflow","whiteSpace","verticalAlign","color","background","width","height","marginRight","cursor","textTransform","fontFamily","fontSize","willChange","marginLeft","borderLeft","Contents","style","constructor","state","open","visible","immediate","id","toggleImmediate","e","element","this","reduce","val","usricon","console","ArrowIcon","Icon","children","icon","tree","className","visibility","onClick","toggle","type","onMouseDown","onMouseUp","config","default","opacity","transform","springConfig","React","DirTree","defaultProps","canHide","propTypes","PropTypes","content","onNodeClick","func","Icons","toggleVisibility","restSpeedThreshold","restDisplacementThreshold","Tree","Tree2","from","to","calanderIcon","aria-hidden","focusable","data-prefix","data-icon","class","role","xmlns","viewBox","App","nodeClicked","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f79aea9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst MinusSquareO = props => (\r\n  <svg {...props} viewBox=\"64 -65 897 897\">\r\n    <g>\r\n      <path\r\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 347h-442q-14 0 -25 10.5t-11 25.5v0q0 15 11 25.5t25 10.5h442q14 0 25 -10.5t11 -25.5v0\r\n  q0 -15 -11 -25.5t-25 -10.5z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst PlusSquareO = props => (\r\n  <svg {...props} viewBox=\"64 -65 897 897\">\r\n    <g>\r\n      <path\r\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 420h-184v183q0 15 -10.5 25.5t-25.5 10.5v0q-14 0 -25 -10.5t-11 -25.5v-183h-184\r\n  q-15 0 -25.5 -11t-10.5 -25v0q0 -15 10.5 -25.5t25.5 -10.5h184v-183q0 -15 11 -25.5t25 -10.5v0q15 0 25.5 10.5t10.5 25.5v183h184q15 0 25.5 10.5t10.5 25.5v0q0 14 -10.5 25t-25.5 11z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst EyeO = props => (\r\n  <svg {...props} viewBox=\"61 51 902 666\">\r\n    <g>\r\n      <path\r\n        d=\"M963 384q0 14 -21 62q-26 65 -61 109q-57 71 -139 112q-99 50 -230 50t-231 -50q-80 -41 -138 -112q-34 -43 -61 -109q-21 -48 -21 -62v0v0v0v0q0 -14 21 -62q27 -66 61 -109q57 -71 139 -112q100 -50 230 -50t230 50q81 41 139 112q35 44 62 109q20 48 20 62v0v0v0v0z\r\n  M889 384q-25 -77 -64 -126h-1q-46 -59 -114 -93q-85 -42 -198.5 -42t-198.5 42q-67 34 -114 93q-40 49 -65 126q25 77 65 126q47 59 114 93q85 43 199 43t198 -43q67 -33 114 -93q40 -49 65 -126zM512 558q-72 0 -122.5 -50.5t-50.5 -122.5t50.5 -122.5t122.5 -50.5\r\n  t122.5 50.5t50.5 122.5t-50.5 122.5t-122.5 50.5zM614 385q0 -42 -30 -72t-72 -30t-72 30t-30 72t30 72t72 30t72 -30t30 -72z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst CloseSquareO = props => (\r\n  <svg {...props} viewBox=\"64 -65 897 897\">\r\n    <g>\r\n      <path\r\n        d=\"M717.5 589.5q-10.5 10.5 -25.5 10.5t-26 -10l-154 -155l-154 155q-11 10 -26 10t-25.5 -10.5t-10.5 -25.5t11 -25l154 -155l-154 -155q-11 -10 -11 -25t10.5 -25.5t25.5 -10.5t26 10l154 155l154 -155q11 -10 26 -10t25.5 10.5t10.5 25t-11 25.5l-154 155l154 155\r\n  q11 10 11 25t-10.5 25.5zM888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst DownArrow = props => (\r\n  <svg aria-hidden=\"true\" {...props } focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-down\" class=\"svg-inline--fa fa-caret-down fa-w-10\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n    <path fill={props.style.fill} d=\"M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z\">\r\n    </path></svg>\r\n)\r\n\r\nconst RightArrow = props => (\r\n  <svg aria-hidden=\"true\" {...props} focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-right\" class=\"svg-inline--fa fa-caret-right fa-w-6\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\">\r\n    <path fill={props.style.fill} d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\">\r\n    </path></svg>\r\n)\r\n\r\nconst FolderOpen = props => (\r\n  <svg aria-hidden=\"true\" {...props} focusable=\"false\" data-prefix=\"fas\" data-icon=\"folder-open\" class=\"svg-inline--fa fa-folder-open fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\r\n    <path fill={props.style.fill} d=\"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\">\r\n    </path></svg>\r\n)\r\n\r\nconst Folder = props => (\r\n  <svg aria-hidden=\"true\" {...props} focusable=\"false\" data-prefix=\"fas\" data-icon=\"folder\" class=\"svg-inline--fa fa-folder fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n    <path fill={props.style.fill} d=\"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z\">\r\n    </path></svg>\r\n)\r\n\r\nconst File = props => (\r\n  <svg aria-hidden=\"true\" {...props } focusable=\"false\" data-prefix=\"fas\" data-icon=\"file-alt\" class=\"svg-inline--fa fa-file-alt fa-w-12\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\r\n    <path fill={props.style.fill} d=\"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\">\r\n    </path></svg>\r\n)\r\n\r\nexport { PlusSquareO, MinusSquareO, CloseSquareO, EyeO, DownArrow, RightArrow, Folder, FolderOpen, File }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Spring, config, animated } from 'react-spring'\r\nimport * as Icons from './../icons'\r\n\r\nconst styles = {\r\n  tree: {\r\n    position: 'relative',\r\n    padding: '4px 0px 0px 0px',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    verticalAlign: 'middle',\r\n    color: 'black',\r\n    fill: \"black\",\r\n    background: 'white',\r\n    \r\n  },\r\n  toggle: {\r\n    width: '1em',\r\n    height: '1em',\r\n    marginRight: 10,\r\n    cursor: 'pointer',\r\n    verticalAlign: 'middle',\r\n  },\r\n  type: {\r\n    textTransform: 'uppercase',\r\n    fontFamily: 'monospace',\r\n    fontSize: '0.6em',\r\n    verticalAlign: 'middle',\r\n  },\r\n  node: {\r\n    verticalAlign: 'middle', \r\n    cursor: 'pointer'\r\n  },\r\n  contents: {\r\n    willChange: 'transform, opacity, height',\r\n    marginLeft: 6,\r\n    padding: '4px 0px 0px 14px',\r\n    borderLeft: '1px dashed rgba(255,255,255,0.4)',\r\n  },\r\n  icon: {\r\n   // will be used same colors of tree.\r\n   // user can override this and apply colors\r\n  }\r\n}\r\n\r\nconst Contents = ({ children, ...style }) => (\r\n  <animated.div style={{ ...style, ...styles.contents }}>\r\n    {children}\r\n  </animated.div>\r\n)\r\n\r\nexport default class DirTree extends React.PureComponent {\r\n  static defaultProps = { open: false, visible: true, canHide: false }\r\n  static propTypes = {\r\n    open: PropTypes.bool,\r\n    visible: PropTypes.bool,\r\n    canHide: PropTypes.bool,\r\n    content: PropTypes.node,\r\n    springConfig: PropTypes.func,\r\n    onNodeClick: PropTypes.func,\r\n  }\r\n\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      id: props.id, \r\n      open: props.open, \r\n      visible: props.visible, \r\n      immediate: props.toggleImmediate \r\n    }\r\n    this.onNodeClick = this.onNodeClick.bind(this)\r\n    this.onMouseDown = this.onMouseDown.bind(this)\r\n    this.onMouseUp = this.onMouseUp.bind(this)\r\n  }\r\n\r\n  toggle = () =>\r\n    this.props.children &&\r\n    this.setState(state => ({ open: !state.open }))\r\n\r\n  toggleVisibility = () => {\r\n    this.setState(\r\n      state => ({ visible: !state.visible, immediate: true }),\r\n      () => this.props.onClick && this.props.onClick(this.state.visible)\r\n    )\r\n  }\r\n\r\n  onMouseDown(e){\r\n    var element = e.target\r\n    element.style.color = \"red\"\r\n  }\r\n\r\n  onMouseUp(e){\r\n    var element = e.target\r\n    element.style.color = \"inherit\"\r\n  }\r\n\r\n  onNodeClick = () => {\r\n    this.props.onNodeClick && this.props.onNodeClick(this.state.id)\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    this.setState(state => {\r\n      return ['open', 'visible'].reduce(\r\n        (acc, val) =>\r\n          this.props[val] !== props[val] ? { ...acc, [val]: props[val] } : acc,\r\n        {}\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { open, immediate } = this.state\r\n    const { children, content, type, style = {}, springConfig, usricon } = this.props\r\n    console.log({...style});\r\n    \r\n    const ArrowIcon = open ? Icons.DownArrow : Icons.RightArrow\r\n    \r\n    const Icon = usricon ? usricon : children ? open ? Icons.FolderOpen : Icons.Folder : Icons.File\r\n\r\n    let icon = {\r\n        fill: \"inherit\",\r\n        background: \"inherit\",\r\n        ...style.icon\r\n      }\r\n    \r\n    return (\r\n      <div style={{ \r\n        ...styles.tree,\r\n        ...style.tree \r\n        }}>\r\n         <ArrowIcon\r\n          className=\"toggle\"\r\n          style={{\r\n            fill: \"inherit\",\r\n            background: \"inherit\",\r\n            ...styles.toggle,\r\n            visibility : children ? 'inherit' : \"hidden\"\r\n          }}\r\n          onClick={this.toggle}\r\n        />\r\n        <span style={{ ...styles.type, marginRight: type ? 10 : 0 }}>\r\n          {type}\r\n        </span>\r\n          <Icon\r\n            className=\"toggle\"\r\n            style={{\r\n              ...icon,\r\n              ...styles.toggle\r\n            }}\r\n          />\r\n        \r\n        <span style={{...styles.node }} onClick={this.onNodeClick} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\r\n          {content}\r\n        </span>\r\n        <Spring\r\n          native\r\n          immediate={immediate}\r\n          config={{\r\n            ...config.default,\r\n          }}\r\n          from={{ height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' }}\r\n          to={{\r\n            height: open ? 'auto' : 0,\r\n            opacity: open ? 1 : 0,\r\n            transform: open ? 'translate3d(0px,0,0)' : 'translate3d(20px,0,0)',\r\n          }}\r\n          {...springConfig && springConfig(open)}\r\n          render={Contents}>\r\n          {children}\r\n        </Spring>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Spring, config, animated } from 'react-spring'\r\nimport DirTree from './components/DirTree'\r\nimport * as Icons from './icons'\r\n\r\nconst styles = {\r\n  tree: {\r\n    position: 'relative',\r\n    padding: '4px 0px 0px 0px',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    verticalAlign: 'middle',\r\n    color: 'black',\r\n    fill: \"black\",\r\n    background: 'white',\r\n    \r\n  },\r\n  toggle: {\r\n    width: '1em',\r\n    height: '1em',\r\n    marginRight: 10,\r\n    cursor: 'pointer',\r\n    verticalAlign: 'middle',\r\n  },\r\n  type: {\r\n    textTransform: 'uppercase',\r\n    fontFamily: 'monospace',\r\n    fontSize: '0.6em',\r\n    verticalAlign: 'middle',\r\n  },\r\n  node: {\r\n    verticalAlign: 'middle', \r\n    cursor: 'pointer'\r\n  },\r\n  contents: {\r\n    willChange: 'transform, opacity, height',\r\n    marginLeft: 6,\r\n    padding: '4px 0px 0px 14px',\r\n    borderLeft: '1px dashed rgba(255,255,255,0.4)',\r\n  },\r\n  icon: {\r\n   // will be used same colors of tree.\r\n   // user can override this and apply colors\r\n  }\r\n}\r\n\r\nconst Contents = ({ children, ...style }) => (\r\n  <animated.div style={{ ...style, ...styles.contents }}>\r\n    {children}\r\n  </animated.div>\r\n)\r\n\r\nexport default class Tree extends React.PureComponent {\r\n  static defaultProps = { open: false, visible: true, canHide: false }\r\n  static propTypes = {\r\n    open: PropTypes.bool,\r\n    visible: PropTypes.bool,\r\n    canHide: PropTypes.bool,\r\n    content: PropTypes.node,\r\n    springConfig: PropTypes.func,\r\n    onNodeClick: PropTypes.func,\r\n  }\r\n\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      id: props.id, \r\n      open: props.open, \r\n      visible: props.visible, \r\n      immediate: props.toggleImmediate \r\n    }\r\n    this.onNodeClick = this.onNodeClick.bind(this)\r\n    this.onMouseDown = this.onMouseDown.bind(this)\r\n    this.onMouseUp = this.onMouseUp.bind(this)\r\n  }\r\n\r\n  toggle = () =>\r\n    this.props.children &&\r\n    this.setState(state => ({ open: !state.open }))\r\n\r\n  toggleVisibility = () => {\r\n    this.setState(\r\n      state => ({ visible: !state.visible, immediate: true }),\r\n      () => this.props.onClick && this.props.onClick(this.state.visible)\r\n    )\r\n  }\r\n\r\n  onMouseDown(e){\r\n    var element = e.target\r\n    element.style.color = \"red\"\r\n  }\r\n\r\n  onMouseUp(e){\r\n    var element = e.target\r\n    element.style.color = \"inherit\"\r\n  }\r\n\r\n  onNodeClick = () => {\r\n    this.props.onNodeClick && this.props.onNodeClick(this.state.id)\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    this.setState(state => {\r\n      return ['open', 'visible'].reduce(\r\n        (acc, val) =>\r\n          this.props[val] !== props[val] ? { ...acc, [val]: props[val] } : acc,\r\n        {}\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { open, visible, immediate } = this.state\r\n    const { children, content, type, style = {}, canHide, springConfig } = this.props\r\n    \r\n    const Icon = Icons[`${children ? (open ? 'Minus' : 'Plus') : 'Close'}SquareO`]\r\n\r\n    let icon = {\r\n        fill: \"inherit\",\r\n        background: \"inherit\",\r\n        ...style.icon\r\n      }\r\n    \r\n    return (\r\n      <div style={{ \r\n        ...styles.tree,\r\n        ...style.tree \r\n        }}>\r\n        <Icon\r\n          className=\"toggle\"\r\n          style={{\r\n            ...icon,\r\n            ...styles.toggle,\r\n            opacity: children ? 1 : 0.3, \r\n          }}\r\n          onClick={this.toggle}\r\n        />\r\n        <span style={{ ...styles.type, marginRight: type ? 10 : 0 }}>\r\n          {type}\r\n        </span>\r\n        {canHide && (\r\n          <Icons.EyeO\r\n            className=\"toggle\"\r\n            style={{\r\n              fill: style ? style.icon ? style.icon.fill : 'inherit' : 'inherit',\r\n              background: style ? style.icon ? style.icon.background : 'inherit' : 'inherit',\r\n              ...styles.toggle, \r\n              opacity: visible ? 1 : 0.4 \r\n            }}\r\n            onClick={this.toggleVisibility}\r\n          />\r\n        )}\r\n        <span style={{...styles.node }} onClick={this.onNodeClick} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\r\n          {content}\r\n        </span>\r\n        <Spring\r\n          native\r\n          immediate={immediate}\r\n          config={{\r\n            ...config.default,\r\n            restSpeedThreshold: 1,\r\n            restDisplacementThreshold: 0.01,\r\n          }}\r\n          from={{ height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' }}\r\n          to={{\r\n            height: open ? 'auto' : 0,\r\n            opacity: open ? 1 : 0,\r\n            transform: open ? 'translate3d(0px,0,0)' : 'translate3d(20px,0,0)',\r\n          }}\r\n          {...springConfig && springConfig(open)}\r\n          render={Contents}>\r\n          {children}\r\n        </Spring>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Tree2 = props => (\r\n  <DirTree {...props} />\r\n)","import React from 'react';\r\nimport Tree, { Tree2 } from 'react-animating-tree'\r\n\r\nvar config = open => ({\r\n  from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n  to: {\r\n    height: open ? 'auto' : 0,\r\n    opacity: open ? 1 : 0,\r\n    transform: open ? 'translate3d(0px,0,0)' : 'translate3d(20px,0,0)',\r\n  },\r\n})\r\n\r\nconst calanderIcon = props => (\r\n  <svg aria-hidden=\"true\" {...props} focusable=\"false\" data-prefix=\"fas\" data-icon=\"calendar-alt\" class=\"svg-inline--fa fa-calendar-alt fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n    <path fill={props.style.fill} d=\"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm320-196c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM192 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM64 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\">\r\n    </path></svg>\r\n)\r\n\r\nvar styles = {\r\n  tree: {\r\n    color: 'blue',\r\n    background: 'white',\r\n  },\r\n  icon: {\r\n    fill: 'green',\r\n    background: 'white'\r\n  }\r\n}\r\nfunction App() {\r\n\r\n  function nodeClicked(e){\r\n    console.log(e)\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n    <div className=\"col-md-6\">\r\n      <h4>Tree</h4>\r\n      <Tree content=\"Apple\" type=\"Fruit\" open canHide visible style={{...styles}}\r\n        onClick={console.log} /* springConfig={config} */ toggleImmediate={false} >\r\n        <Tree content=\"Contents\" onNodeClick={() => nodeClicked(\"somethingx\")} toggleImmediate={false}>\r\n          <Tree onNodeClick={() => nodeClicked(\"something\")} id={1343} content=\"Seeds\" />\r\n          <Tree content=\"Seeds\" />\r\n          <Tree content=\"Seeds\"  />\r\n          <Tree content=\"Seeds\" />\r\n        </Tree>\r\n        <Tree content=\"Seeds\" />\r\n          <Tree content=\"Seeds\" />\r\n      </Tree>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>Tree2</h4>\r\n      <Tree2 content=\"Apple\" open\r\n        onClick={console.log} springConfig={config} toggleImmediate={true} style={{ icon: {fill: 'orange'}}} >\r\n        <Tree2 content=\"Contents\" onNodeClick={() => nodeClicked(\"somethingx\")} toggleImmediate={true} usricon={calanderIcon} style={{...styles}}> \r\n          <Tree2 onNodeClick={() => nodeClicked(\"something\")} id={1343} content=\"Seeds\" usricon={calanderIcon}  />\r\n          <Tree2 content=\"Seeds\" style={{...styles, icon: {fill:'blue'}}} />\r\n          <Tree2 content=\"Seeds\"  />\r\n        </Tree2>\r\n        <Tree2 content=\"Seeds\" >\r\n          <Tree2 content=\"Seeds\" />\r\n          <Tree2 content=\"Seeds\"  />\r\n        </Tree2>\r\n        <Tree2 content=\"Seeds\" />\r\n      </Tree2>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}